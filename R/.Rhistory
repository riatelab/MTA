load("/home/nlambert/Documents/R/MTA/data/nuts2010.RData")
nuts2010@data
head(nuts2010@data)
myGradient <- palette("blue.pal",5,"red.pal",middle=F,alphaeffect=T)
myGradient <- palette("blue.pal",5,"red.pal",15)
myGradient <- palette("blue.pal",5,"red.pal",15,middle=F,alphaeffect=T)
# FONCTION 1 : CREATION DE DEGRADES
load("/home/nlambert/Documents/R/Chroro/palettes.RData")
#' palette
#'
#' This function call and combine colors
#'
#' @details This function call and combine colors with several paralemeters
#'
#' @param pal1 name of the colorgradiant in palettes.RData
#' @param n1 number of colors
#' @param pal2 name of a second color gradiant in palettes.RData (optionnal)
#' @param n2 number of colors for the second color gradiant
#' @param middle boolean. if true, add a neutral color in the middle
#' @param #aplhaeffect boolean. If true, enhance contrasts by adding opacity
#'
#' @examples
#' # Simple gradation in blue
#' palette("blue.pal",20)
#'
#' # double gradation blue / red
#' palette(pal1="blue.pal",n1=10, pal2="red.pal",n2=10)
#'
#' @return dataframe
#'
#' @export
palette<-function(pal1,n1,pal2=NULL,n2=NULL,middle=F,alphaeffect=F){
# PARAMETRES
alphainit<-30
alpha="FF"
middlecol<-"#F6F6F6"
# CREATION DE LA PALETTE
# 1.Simple gradation ----------------------------
if(is.null(pal2) & is.null(n2)){
pal<-as.character(unlist(colors[[pal1]][n1]))
if(alphaeffect==T){
for ( i in 1:n1-1) {
alpha<-as.hexmode(floor(alphainit+(255-alphainit)/n1*i))
pal[i]<-paste(pal[i],alpha,sep="")
}
alpha<-as.hexmode(alphainit)
}
}
# 2. Double gradation ------------------------
if(!is.null(pal2) & !is.null(n2)){
n<-max(n1,n2)
pal1<-as.character(unlist(colors[[pal1]][n]))
pal2<-as.character(unlist(colors[[pal2]][n]))
if(alphaeffect==T){
for ( i in 1:n-1) {
alpha<-as.hexmode(floor(alphainit+(255-alphainit)/n*i))
pal1[i]<-paste(pal1[i],alpha,sep="")
pal2[i]<-paste(pal2[i],alpha,sep="")
}
alpha<-as.hexmode(alphainit)
}
pal1 <-pal1[1:n1]
pal1<-rev(pal1)
pal2 <-pal2[1:n2]
pal<-c(pal1,pal2)
if(middle==T){pal<-c(pal1,paste(middlecol,alpha,sep=""),pal2)}
}
return(pal)
}
palette("blue",10)
# FONCTION 2 : RECUPERATION ET AFFICHAGE DES DEGRADES
display.palette.all<-function(nb=10)
{
nbpal <- length(colors)
ncol <- 2
nrow <- round(nbpal/ncol+0.1)
par(mfrow=c(nrow,ncol))
par(mar=c(0.2, 0.2, 1, 0.2), xaxs='i', yaxs='i')
for ( i in 1:nbpal) {
#  i <- 1
pal <- names(colors)[i]
mypal <- palette(pal,nb)
k<-length(mypal)
image(1:k, 1, as.matrix(1:k), col =mypal, xlab = paste(k," classes",sep=""), ylab = "", xaxt = "n", yaxt = "n",bty = "n")
title(names(colors)[i])
}
par(mfrow=c(1,1))
}
display.palette<-function(name)
{
par(mfrow=c(5,4))
par(mar=c(0.2, 0.2, 1, 0.2), xaxs='i', yaxs='i')
for ( i in 1:20) {
mypal <- palette(name,i)
k<-length(mypal)
image(1:k, 1, as.matrix(1:k), col =mypal, xlab = paste(k," classes",sep=""), ylab = "", xaxt = "n", yaxt = "n",bty = "n")
if (i==1){cl <- "classe"}else{cl <- "classes"}
title(paste(i,cl,sep=" "))
}
par(mfrow=c(1,1))
}
display.gradient<-function(v)
{
k<-length(v)
image(1:k, 1, as.matrix(1:k), col =v, xlab = paste(k," classes",sep=""), ylab = "", xaxt = "n", yaxt = "n",bty = "n")
}
palette("blue.pal",20)
display.palette.all(8)
display.palette("harmo.pal")
myGradient <- palette("blue.pal",5,"red.pal",15,middle=F,alphaeffect=T)
display.gradient(myGradient)
myGradient <- palette("blue.pal",5,"red.pal",15,middle=F,alphaeffect=T)
myGradient <- palette("blue.pal",5,"red.pal")
myGradient <- palette("blue.pal",5,"red.pal",15,middle=F,alphaeffect=T)
myGradient <- palette("blue.pal",5,"red.pal",15)
myGradient <- palette("brown.pal",5,"wine.pal",15,middle=F,alphaeffect=T)
display.gradient(myGradient)
myGradient <- palette("purple.pal",5,"wine.pal",15,middle=F,alphaeffect=T)
display.gradient(myGradient)
myGradient <- palette("purple.pal",5,"wine.pal",15,middle=F,alphaeffect=F)
myGradient <- palette("purple.pal",5,"wine.pal",15,middle=F,alphaeffect=F)
myGradient <- palette("purple.pal",5,"wine.pal",15,middle=F,alphaeffect=F)
display.gradient(myGradient)
myGradient <- palette("brown.pal",5,"wine.pal",15,middle=F,alphaeffect=F)
display.gradient(myGradient)
myGradient <- palette("brown.pal",5,"wine.pal",15,middle=T,alphaeffect=F)
display.gradient(myGradient)
myGradient <- palette("brown.pal",5,"wine.pal",15,middle=,alphaeffect=F)
myGradient <- palette("brown.pal",5,"wine.pal",15,middle=F,alphaeffect=F)
display.gradient(myGradient)
myGradient <- palette("brown.pal",5,"purple.pal",15,middle=F,alphaeffect=F)
display.gradient(myGradient)
display.gradient(myGradient)
myGradient <- palette("turquoise.pal",5,"purple.pal",15,middle=F,alphaeffect=F)
display.gradient(myGradient)
myGradient <- palette("turquoise.pal",5,"red.pal",15,middle=F,alphaeffect=F)
display.gradient(myGradient)
myGradient <- palette("blue.pal",5,"red.pal",15,middle=F,alphaeffect=F)
display.gradient(myGradient)
myGradient <- palette("blue.pal",5,"red.pal",8,middle=F,alphaeffect=F)
display.gradient(myGradient)
myGradient <- palette("green.pal",5,"red.pal",8,middle=F,alphaeffect=F)
display.gradient(myGradient)
myGradient <- palette("green.pal",5,"blue.pal",8,middle=F,alphaeffect=F)
myGradient <- palette("blue.pal",5,"red.pal",15,middle=F,alphaeffect=T)
myGradient <- palette("green.pal",5,"blue.pal",8,middle=F,alphaeffect=F)
display.gradient(myGradient)
myGradient <- palette("green.pal",8,"blue.pal",5,middle=F,alphaeffect=F)
display.gradient(myGradient)
